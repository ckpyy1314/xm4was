#summary Building using Maven

= Prerequisites =

  * A local installation of !WebSphere 7.0.
  * Maven 3.

= Load !WebSphere bundles into the local Maven repository =

!WebSphere uses the same OSGi runtime (Equinox) as Eclipse. Therefore maven-eclipse-plugin can be used to install the OSGi bundles of the !WebSphere runtime into the local Maven repository so that they will be available during the build:

{{{
mvn eclipse:to-maven -DeclipseDir=<was_install_dir>
}}}

`<was_install_dir>` is the WAS 7.0 installation directory (e.g. `/opt/IBM/WebSphere/AppServer`). Note that this command must *not* be executed from the XM4WAS source directory. Instead it should be executed from any directory that doesn't contain a `pom.xml` file.

= Configure a Maven toolchain for the WAS 7.0 SDK =

The build assumes that a [http://maven.apache.org/guides/mini/guide-using-toolchains.html toolchain] with id `was7` is defined and that this toolchain is configured with the JDK provided by WAS 7.0. Here is a sample configuration:

{{{
<toolchains>
    <toolchain>
        <type>jdk</type>
        <provides>
            <id>was7</id>
        </provides>
        <configuration>
            <jdkHome>/opt/IBM/WebSphere/AppServer-7.0/java</jdkHome>
        </configuration>
    </toolchain>
</toolchains>
}}}